//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControlSaludApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DIRESAEntities : DbContext
    {
        public DIRESAEntities()
            : base("name=DIRESAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<trabajador> trabajadors { get; set; }
    
        public virtual ObjectResult<spbuscar_apellidos_trabajador_Result> spbuscar_apellidos_trabajador(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_apellidos_trabajador_Result>("spbuscar_apellidos_trabajador", textobuscarParameter);
        }
    
        public virtual ObjectResult<spbuscar_DNI_trabajador_Result> spbuscar_DNI_trabajador(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_DNI_trabajador_Result>("spbuscar_DNI_trabajador", textobuscarParameter);
        }
    
        public virtual int speditar_trabajador(string nombre, string apellidos, string sexo, Nullable<System.DateTime> fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string pass, string establecimiento)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(System.DateTime));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var accesoParameter = acceso != null ?
                new ObjectParameter("acceso", acceso) :
                new ObjectParameter("acceso", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var establecimientoParameter = establecimiento != null ?
                new ObjectParameter("establecimiento", establecimiento) :
                new ObjectParameter("establecimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speditar_trabajador", nombreParameter, apellidosParameter, sexoParameter, fecha_nacimientoParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, accesoParameter, usuarioParameter, passParameter, establecimientoParameter);
        }
    
        public virtual int speliminar_trabajador(Nullable<int> num_documento)
        {
            var num_documentoParameter = num_documento.HasValue ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speliminar_trabajador", num_documentoParameter);
        }
    
        public virtual int spinsertar_trabajador(string nombre, string apellidos, string sexo, Nullable<System.DateTime> fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string pass, string establecimiento)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(System.DateTime));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var accesoParameter = acceso != null ?
                new ObjectParameter("acceso", acceso) :
                new ObjectParameter("acceso", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var establecimientoParameter = establecimiento != null ?
                new ObjectParameter("establecimiento", establecimiento) :
                new ObjectParameter("establecimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spinsertar_trabajador", nombreParameter, apellidosParameter, sexoParameter, fecha_nacimientoParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, accesoParameter, usuarioParameter, passParameter, establecimientoParameter);
        }
    
        public virtual ObjectResult<splogin_Result> splogin(string usuario, string pass)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<splogin_Result>("splogin", usuarioParameter, passParameter);
        }
    
        public virtual ObjectResult<spmostrar_trabajador_Result> spmostrar_trabajador()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_trabajador_Result>("spmostrar_trabajador");
        }
    }
}
